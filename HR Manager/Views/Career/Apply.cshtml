@model HR_Manager.Models.ApplyViewModel

@{
    ViewBag.Title = "Rekrutacja";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container">
    <div class="jumbotron">
        <h1>Rekrutacja</h1>
        <p>Nazwa stanowiska:<strong> @Html.DisplayFor(model => model.OfferName)</strong></p>
        <p>Nr. ogłoszenia: @Html.DisplayFor(model => model.OfferNumber)</p>
        <p>Miejsce pracy: @Html.DisplayFor(model => model.Location) </p>
    </div>

    @if (!string.IsNullOrEmpty(Model.JobDescription))
    {
        <div class="panel panel-default">
            <div class="panel-heading" data-toggle="collapse" data-target="#JobDescriptionPanel"><strong>Opis stanowiska</strong></div>
            <div class="panel-body collapse in" id="JobDescriptionPanel">@Html.Raw(Model.JobDescription)</div>
        </div>
    }


    @using (Html.BeginForm("Apply", "Career", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="panel panel-default">
                <div class="panel-heading" data-toggle="collapse" data-target="#PersonalData"><strong>Dane osobowe</strong></div>
                <div class="panel-body collapse in" id="PersonalData">

                    <div class="form-group">
                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Surname, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Surname, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Surname, "", new { @class = "text-danger" })
                        </div>
                    </div>

                </div>
            </div>


            <div class="panel panel-default">
                <div class="panel-heading" data-toggle="collapse" data-target="#Contact"><strong>Dane kontaktowe</strong></div>
                <div class="panel-body collapse in" id="Contact">

                    <div class="form-group">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                        </div>
                    </div>

                </div>
            </div>


            <div class="panel panel-default">
                <div class="panel-heading" data-toggle="collapse" data-target="#Adress"><strong>Dane Adresowe</strong></div>
                <div class="panel-body collapse in" id="Adress">

                    <div class="form-group">
                        @Html.LabelFor(model => model.Street, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Street, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Street, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Zip, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Zip, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Zip, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                        </div>
                    </div>

                </div>
            </div>

            <div class="panel panel-default">
                <div class="panel-heading" data-toggle="collapse" data-target="#AdditionalInfos"><strong>Dodatkowe informacje</strong></div>
                <div class="panel-body collapse in" id="AdditionalInfos">

                    <div class="form-group">
                        @Html.LabelFor(model => model.FinancialExpectations, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.FinancialExpectations, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.FinancialExpectations, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ReadyToMove, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.ReadyToMove)
                                @Html.ValidationMessageFor(model => model.ReadyToMove, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                </div>
            </div>

            <div class="panel panel-default">
                <div class="panel-heading" data-toggle="collapse" data-target="#Files"><strong>Załączniki</strong></div>
                <div class="panel-body collapse in" id="Files">

                    <div class="form-group">
                        <div class="col-md-2">
                            <input type="file" class="filestyle" accept="application/pdf" name="CVFile" id="CVFile">
                        </div>
                        <div class="col-md-10">
                            <input id="fileLoaderInput" type="text" class="form-control text-box single-lin" readonly>
                        </div>
                    </div>

                </div>
            </div>

            <div class="panel panel-default">
                <div class="panel-heading" data-toggle="collapse" data-target="#Permits"><strong>Zgoda na przetwarzanie danych</strong></div>
                <div class="panel-body collapse in" id="Permits">

                    <div class="form-group">


                        @Html.LabelFor(model => model.PersonalDataProcessing, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.PersonalDataProcessing)
                                @Html.ValidationMessageFor(model => model.PersonalDataProcessing, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">

                        @Html.LabelFor(model => model.CanContact, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.CanContact)
                                @Html.ValidationMessageFor(model => model.CanContact, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                </div>
                @Html.HiddenFor(model => model.OfferNumber, new { @Value = Model.OfferNumber })
                @Html.HiddenFor(model => model.OfferName, new { @Value = Model.OfferName })
                @Html.HiddenFor(model => model.JobDescription, new { @Value = Model.JobDescription })
                @Html.HiddenFor(model => model.Location, new { @Value = Model.Location })
                <input type="hidden" value="@Model.OfferNumber" />
            </div>
            <!--TU-->
            <div class="col-md-4"></div><input type="submit" class="btn btn-default btn-lg center-content col-md-4" value="Aplikuj">


            <!--TU-->

        </div>
    }



</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="@Url.Content("~/Scripts/bootstrap-filestyle.min.js")"></script>
    <script>
        $(":file").filestyle({ badge: false });
        $(":file").filestyle('buttonText', 'Załącz CV (PDF)');
        $(":file").filestyle('input', false);


        $(":file").change(function (e) {
            $in = $(this);
            $("#fileLoaderInput").val($in.val());
        });

    </script>
}
